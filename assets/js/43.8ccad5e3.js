(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{400:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"函数全解之基础函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数全解之基础函数"}},[s._v("#")]),s._v(" 函数全解之基础函数")]),s._v(" "),t("blockquote",[t("p",[s._v("JavaScript 从一门不被看好的脚本语言，逐渐发展为主流开发语言，甚至拆分出诸多分支如：TypeScript Nodejs 之后仍旧能够和诸多后端语言（java C python）争榜肯定是一套非常牛逼的底层设计的，而这一套底层设计是如何做的，本文从函数角度触发分为三个部分逐步让你深入认识JavaScript的牛逼之处。")]),s._v(" "),t("p",[s._v("开始正题：进入javaScript函数一：基础函数")])]),s._v(" "),t("h2",{attrs:{id:"小白篇"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小白篇"}},[s._v("#")]),s._v(" 小白篇")]),s._v(" "),t("h3",{attrs:{id:"函数是什么-作用是啥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数是什么-作用是啥"}},[s._v("#")]),s._v(" 函数是什么，作用是啥？")]),s._v(" "),t("blockquote",[t("p",[s._v("遇到这个问题，很多资深的小伙伴可能有一大堆解释，甚至会照搬红宝书的概念，或者某位大佬的名言....")]),s._v(" "),t("p",[s._v("其实这些答案都不是你自己总结的，只是复刻别人的理解记忆为概念而已，每个人对事物的定义都应有不同。")]),s._v(" "),t("p",[s._v("我的理解：函数就是装了一段特定功能的js代码块，作用：为了减少重复的js代码")])]),s._v(" "),t("h3",{attrs:{id:"函数的体现形式有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数的体现形式有哪些"}},[s._v("#")]),s._v(" 函数的体现形式有哪些？")]),s._v(" "),t("blockquote",[t("p",[s._v("普通函数 【带函数名的函数】"),t("code",[s._v("function 函数名(){}")])]),s._v(" "),t("p",[s._v("匿名函数【没有函数名的函数】 "),t("code",[s._v("function (){}")])]),s._v(" "),t("p",[s._v("立即执行函数【定义完成瞬间调用】  "),t("code",[s._v("(function(){})()")])]),s._v(" "),t("p",[s._v("箭头函数【只是普通函数的简写语法糖】"),t("code",[s._v("const 函数名=()=>{}")])])]),s._v(" "),t("h3",{attrs:{id:"普通函数的定义方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#普通函数的定义方式"}},[s._v("#")]),s._v(" 普通函数的定义方式")]),s._v(" "),t("blockquote",[t("p",[s._v("两种定义方式：声明式定义   表达式定义")])]),s._v(" "),t("ul",[t("li",[s._v("声明式定义")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//上来就写function 告诉浏览器：“我正在定义一个函数哟”")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 函数名要求：符合变量命名的要求（以英文字母、下划线、$开头，组成：英文字母、下划线、$、数字）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("函数名")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//函数体 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("表达式定义")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义方式 类似于 赋值表达式，将一个匿名函数赋值给 变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("函数名")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//函数体")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("blockquote",[t("p",[s._v("两种定义方式的区别：")]),s._v(" "),t("p",[s._v("声明式定义的函数，具有函数提升功能，即：在当前js文件中 任意位置定义，支持在当前js文件中 任意位置调用。")]),s._v(" "),t("p",[s._v("表达式定义的函数，遵循：先定义，后使用原则。")])]),s._v(" "),t("h3",{attrs:{id:"调用方式有哪些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调用方式有哪些"}},[s._v("#")]),s._v(" 调用方式有哪些？")]),s._v(" "),t("blockquote",[t("p",[s._v("直调-直接调用 "),t("code",[s._v("函数名()")])]),s._v(" "),t("p",[s._v("对象-对象中有属性值是一个函数"),t("code",[s._v("对象.属性名()")])]),s._v(" "),t("p",[s._v("回调-在函数的调用中传递了函数【回调函数】")]),s._v(" "),t("p",[s._v("自调-在函数体中调用了自己【递归函数】")]),s._v(" "),t("p",[s._v("实例化-构造函数或者类的调用【new 关键字】"),t("code",[s._v("new 函数名()")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);